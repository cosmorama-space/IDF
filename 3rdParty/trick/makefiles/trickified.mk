# This makefile uses Trick's Trickification feature, which allows a project to
# compile all of its Trick-auto-generated code into a standalone library which
# can be linked into simluation builds. With this approach, the project need be
# compiled only once, instead of every time a simulation is rebuilt, which can
# significantly reduce sim build times.
#
# This makefile also automatically builds the core and Trickified IDF libraries
# if they do not already exist. However, it does not know about those libraries'
# dependencies, and so will not rebuild them if IDF's source code changes.
# Therefore, this makefile is intended to be used when developing against a
# fixed version of IDF. If you upgrade IDF, you will have to manually remove
# these libraries so that they are rebuilt with the new code by this makefile.

MAKEFILE_DIR := $(abspath $(dir $(lastword $(MAKEFILE_LIST))))
include $(MAKEFILE_DIR)/common.mk

# Enable library support if Trick >= 17.1
ifneq ($(wildcard $(TRICK_HOME)/share/trick/makefiles/trickify.mk),)

    # The core IDF library
    CORE_LIB := $(IDF_HOME)/build/libidf.a

    # The Trickified IDF library
    TRICKIFIED_LIB :=$(THIRD_PARTY)/lib/trickified_idf.o

    # Additional links to be built by build_externals
    LINKS += $(EXTERNALS)/3rdParty/trick/lib/python

    # Tell SWIG where to find *.i files
    TRICK_SWIG_FLAGS += -I$(THIRD_PARTY)/lib

    # Tell Trick to expect io_* and py_* code for these headers, but not to generate it itself.
    # This is different than ICG_EXCLUDE, which would cause Trick to ignore the io_* and py_* code.
    TRICK_EXT_LIB_DIRS += :$(INCLUDE)

    # Tell Trick where to find the Python modules generated by SWIG
    TRICK_PYTHON_PATH += :$(EXTERNALS)/3rdParty/trick/lib/python:$(THIRD_PARTY)/lib/python

    # Link in the Trickified object and core library
    TRICK_LDFLAGS += $(TRICKIFIED_LIB) $(CORE_LIB)

    # Append the trickified library as a prerequisite to the $(SWIG_SRC) target,
    # causing it to be built along with the sim if necessary. Using $(SWIG_SRC)
    # ensures that the Trickified .i files are generated before SWIG is run on
    # any sim .i files, which may %import them.
    $(SWIG_SRC): $(TRICKIFIED_LIB)

    # Append the core library as a prerequisite to the $(S_MAIN) target,
    # causing it to be built along with the sim if necessary.
    $(S_MAIN): $(CORE_LIB)

    $(CORE_LIB):
	@mkdir -p $(dir $@); cd $(dir $@); cmake ..
	@$(MAKE) -s -C $(dir $@)

    $(TRICKIFIED_LIB):
	@$(MAKE) -s -C $(dir $@)

else
    include $(MAKEFILE_DIR)/core.mk
endif
